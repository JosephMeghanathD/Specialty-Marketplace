spring.application.name=product-order-service
server.port=8082
spring.config.import=sm://
spring.cloud.gcp.project-id=speciality-marketplace

# PostgreSQL Configuration
# --- Database Configuration for external NeonDB ---
spring.datasource.url=jdbc:postgresql://ep-withered-math-a8iwsc2h-pooler.eastus2.azure.neon.tech:5432/specality_market_place?sslmode=require
spring.datasource.username=neondb_owner
spring.datasource.password=${sm://specialty-db-password}

# Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration
jwt.secret=bb7c33f1d7765f7090a552b176348b5a7bd0efdc10ea02b073f8f498c3cc7030f2ea55bfc74f0c4a4a4a2853c8a4c1fc41f12a0bee7464db77cb7a0fdc9f9d25
jwt.expiration=86400000


# Jackson configuration for pretty printing JSON
spring.jackson.serialization.indent-output=true

# Logging configuration
logging.level.org.springframework=INFO
logging.level.com.specialty.productorderservice=DEBUG

# Enable CORS
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

spring.security.user.name=admin
spring.security.user.password=admin


